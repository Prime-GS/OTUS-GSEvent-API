type Event {
  id: Int!
  title: String!
  description: String!
  startedAt: Date!
  categories: [Category!]
  subscribers: [User!]
  creatorId: Int!
  creator: User
  createdAt: Date!
  updatedAt: Date!
}

input SubscribeInput {
  email: String!
  id: Int!
}

input EventInput {
  id: Int
  title: String!
  description: String!
  startedAt: Date!
  categoriesIds: [Int!]
  creatorId: Int!
}

type EventResponse {
  data: [Event!]!
  total: Int!
}


type Query {
  events(pagination: PaginationInput, filter: FilterInput): EventResponse!
  event(id: Int!): Event
}

type Mutation {
  toggleSubscribe(input: SubscribeInput!): Boolean!
  upsertEvent(input: EventInput!): Event!
  deleteEvent(id: Int!): Boolean!
}
